@page "/admin/actors"

@using System.IO
@using Microsoft.AspNetCore.Hosting
@using Microsoft.AspNetCore.Components.Forms
@inject IWebHostEnvironment Environment
@inject NavigationManager NavigationManager
@inject LocalDbService LocalDbService
@attribute [Authorize]

@layout BadgeFed.Components.AdminLayout

<h1 class="title">Manage Actors</h1>

<div class="mb-4 has-text-right">
    <a href="/admin/actors/create" class="button is-success">Create New Actor</a>
</div>

@if (actors == null)
{
    <div class="notification is-info is-light">
        <p>Loading...</p>
    </div>
}
else
{
    <div class="table-container">
        <table class="table is-hoverable is-fullwidth">
            <thead>
                <tr>
                    <th>Full Name</th>
                    <th>Summary</th>
                    <th>Avatar</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var actor in actors)
                {
                    <tr>
                        <td>@actor.FullName</td>
                        <td>@actor.Summary</td>
                        <td>
                            <figure class="image is-64x64">
                                <img src="@actor.AvatarPath" alt="Avatar" class="is-rounded" />
                            </figure>
                        </td>
                        <td class="has-text-right">
                            <div class="buttons is-right">
                                <button class="button is-primary is-small" @onclick="() => EditActor(actor)">Edit</button>
                                <button class="button is-link is-small" @onclick="() => ViewActor(actor)">View</button>
                                <button class="button is-danger is-small" @onclick="() => DeleteActor(actor)">Delete</button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private List<Actor> actors;
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        actors = LocalDbService.GetActors();
    }

    private void EditActor(Actor actor)
    {
        NavigationManager.NavigateTo($"/admin/actors/edit/{actor.Id}");
    }

    private void ViewActor(Actor actor)
    {
        NavigationManager.NavigateTo(actor.Uri?.ToString());
    }

    private async void DeleteActor(Actor actor)
    {
        LocalDbService.DeleteActor(actor.Id);
        actors = LocalDbService.GetActors();
    }
}